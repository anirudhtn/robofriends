{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAgBeA,EAbF,SAACC,GACb,OACC,sBAAKC,UAAU,2DAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,MACrD,gCACC,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,QACV,qECUWC,EAlBC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACC,8BACCA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CACCP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHPK,SCUDC,EAfC,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC7B,OACC,qBAAKb,UAAU,OAAf,SACC,uBACCA,UAAU,iCACVc,KAAK,SACLC,YAAY,kBACZC,SAAUH,OCDAI,EAPD,SAAClB,GACd,OACC,qBAAKmB,MAAO,CAACC,UAAY,SAAUC,OAAO,OAAQC,OAAO,SAAzD,SACEtB,EAAMuB,YCsCKC,G,wDAnCd,aAAc,IAAD,8BACZ,gBAWDC,eAAe,SAACC,GACf,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,SAXxC,EAAKC,MAAM,CACVtB,OAAS,GACTK,YAAc,IAJH,E,qDAOb,WAAoB,IAAD,OAClBkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKR,SAAS,CAACnB,OAAO2B,S,oBAMpC,WAAS,IAAD,OACDC,EAAeC,KAAKP,MAAMtB,OAAO8B,QAAO,SAAAC,GAC9C,OAAOA,EAAMlC,KAAKmC,cAAcC,SAAS,EAAKX,MAAMjB,YAAY2B,kBAEhE,OAA8B,IAA3BH,KAAKP,MAAMtB,OAAOkC,OAAmB,6CAEvC,sBAAKzC,UAAU,KAAf,UACC,6CACA,cAAC,EAAD,CAAWa,aAAcuB,KAAKZ,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUjB,OAAQ4B,a,GA3BLO,IAAMC,YCMTC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.bbbca29d.chunk.js","sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom'\n\nconst Card = (props) => {\n\treturn(\n\t\t<div className='bg-light-blue on hover dib br3 pa3 ma2 grow shadow-5 bw2'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${props.id}`} />\n\t\t\t<div>\n\t\t\t\t<h2>{props.name}</h2>\n\t\t\t\t<p>{props.email}</p>\n\t\t\t\t<p>Click to see the magic, mate!</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nconst CardList =({robots}) => {\n\treturn(\n\t\t<div>{\n\t\t\trobots.map((user, i)=> {\n\t\t\t\treturn ( \n\t\t\t\t\t<Card key={i} \n\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\temail={robots[i].email} \n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\n\t\t\t})\n\t\t}</div>\n\t\n\t);\n\n}\nexport default CardList","import React from 'react';\n\nconst SearchBox=({searchField, searchChange})=>{\n\t\treturn(\n\t\t\t<div className='pa2 '>\n\t\t\t\t<input\n\t\t\t\t\tclassName='pa3 ba b--green bg-light-green' \n\t\t\t\t\ttype='search' \n\t\t\t\t\tplaceholder='Search for bots'\n\t\t\t\t\tonChange={searchChange}\n\t\t\t\t/>\n\n\t\t\t</div>\n\t\t);\n\t\n}\n\nexport default SearchBox;","import React from 'react';\nconst Scroll =(props) =>{\n\treturn(\n\t\t<div style={{overflowY : 'scroll', border:'3px ', height:'900px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\nexport default Scroll;\n","import React from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport {robots} from './robots';\nimport Scroll from './Scroll';\nimport './App.css';\nclass App extends React.Component{\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={\n\t\t\trobots : [],\n\t\t\tsearchField : ''\n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response=>response.json())\n\t\t.then(users=>this.setState({robots:users}))\n\t}\n\tonSearchChange=(event)=>{\n\t\tthis.setState({searchField:event.target.value})\n\t\t//console.log(filteredRobots);\n\t}\n\trender(){\n\t\tconst filteredRobots=this.state.robots.filter(robot=>{\n\t\treturn robot.name.toLowerCase().includes(this.state.searchField.toLowerCase())\n\t\t})\n\t\tif(this.state.robots.length===0) return <h1>Loading....</h1>\n\t\telse \treturn(\n\t\t\t<div className='tc'>\n\t\t\t\t<h1>Robofriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n \n\t}\n\t\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import {robots} from './robots';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App /> ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}